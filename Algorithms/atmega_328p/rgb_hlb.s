	.file	"rgb_hlb.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
.global	__floatsisf
.global	__divsf3
.global	__gtsf2
.global	__ltsf2
.global	__addsf3
.global	__eqsf2
.global	__subsf3
	.text
.global	RGBtoHSL
	.type	RGBtoHSL, @function
RGBtoHSL:
	push r12
	push r13
	push r14
	push r15
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,29
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 29 */
/* stack size = 35 */
.L__stack_usage = 35
	std Y+25,r22
	std Y+26,r23
	std Y+27,r24
	std Y+29,r21
	std Y+28,r20
	ldd r24,Y+25
	mov r24,r24
	ldi r25,0
	mov __tmp_reg__,r25
	lsl r0
	sbc r26,r26
	sbc r27,r27
	movw r22,r24
	movw r24,r26
	call __floatsisf
	movw r26,r24
	movw r24,r22
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(127)
	ldi r21,lo8(67)
	movw r22,r24
	movw r24,r26
	call __divsf3
	movw r26,r24
	movw r24,r22
	std Y+1,r24
	std Y+2,r25
	std Y+3,r26
	std Y+4,r27
	ldd r24,Y+26
	mov r24,r24
	ldi r25,0
	mov __tmp_reg__,r25
	lsl r0
	sbc r26,r26
	sbc r27,r27
	movw r22,r24
	movw r24,r26
	call __floatsisf
	movw r26,r24
	movw r24,r22
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(127)
	ldi r21,lo8(67)
	movw r22,r24
	movw r24,r26
	call __divsf3
	movw r26,r24
	movw r24,r22
	std Y+5,r24
	std Y+6,r25
	std Y+7,r26
	std Y+8,r27
	ldd r24,Y+27
	mov r24,r24
	ldi r25,0
	mov __tmp_reg__,r25
	lsl r0
	sbc r26,r26
	sbc r27,r27
	movw r22,r24
	movw r24,r26
	call __floatsisf
	movw r26,r24
	movw r24,r22
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(127)
	ldi r21,lo8(67)
	movw r22,r24
	movw r24,r26
	call __divsf3
	movw r26,r24
	movw r24,r22
	std Y+9,r24
	std Y+10,r25
	std Y+11,r26
	std Y+12,r27
	ldd r18,Y+5
	ldd r19,Y+6
	ldd r20,Y+7
	ldd r21,Y+8
	ldd r22,Y+1
	ldd r23,Y+2
	ldd r24,Y+3
	ldd r25,Y+4
	call __gtsf2
	cp __zero_reg__,r24
	brge .L45
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+1
	ldd r23,Y+2
	ldd r24,Y+3
	ldd r25,Y+4
	call __gtsf2
	cp __zero_reg__,r24
	brge .L46
	ldd r24,Y+1
	ldd r25,Y+2
	ldd r26,Y+3
	ldd r27,Y+4
	rjmp .L7
.L46:
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r26,Y+11
	ldd r27,Y+12
	rjmp .L7
.L45:
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	call __gtsf2
	cp __zero_reg__,r24
	brge .L47
	ldd r24,Y+5
	ldd r25,Y+6
	ldd r26,Y+7
	ldd r27,Y+8
	rjmp .L7
.L47:
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r26,Y+11
	ldd r27,Y+12
.L7:
	std Y+13,r24
	std Y+14,r25
	std Y+15,r26
	std Y+16,r27
	ldd r18,Y+5
	ldd r19,Y+6
	ldd r20,Y+7
	ldd r21,Y+8
	ldd r22,Y+1
	ldd r23,Y+2
	ldd r24,Y+3
	ldd r25,Y+4
	call __ltsf2
	tst r24
	brge .L48
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+1
	ldd r23,Y+2
	ldd r24,Y+3
	ldd r25,Y+4
	call __ltsf2
	tst r24
	brge .L49
	ldd r24,Y+1
	ldd r25,Y+2
	ldd r26,Y+3
	ldd r27,Y+4
	rjmp .L16
.L49:
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r26,Y+11
	ldd r27,Y+12
	rjmp .L16
.L48:
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	call __ltsf2
	tst r24
	brge .L50
	ldd r24,Y+5
	ldd r25,Y+6
	ldd r26,Y+7
	ldd r27,Y+8
	rjmp .L16
.L50:
	ldd r24,Y+9
	ldd r25,Y+10
	ldd r26,Y+11
	ldd r27,Y+12
.L16:
	std Y+17,r24
	std Y+18,r25
	std Y+19,r26
	std Y+20,r27
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	call __addsf3
	movw r26,r24
	movw r24,r22
	ldi r18,0
	ldi r19,0
	ldi r20,0
	ldi r21,lo8(64)
	movw r22,r24
	movw r24,r26
	call __divsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+28
	ldd r19,Y+29
	movw r30,r18
	std Z+8,r24
	std Z+9,r25
	std Z+10,r26
	std Z+11,r27
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	call __eqsf2
	tst r24
	brne .L51
	ldd r24,Y+28
	ldd r25,Y+29
	movw r30,r24
	std Z+4,__zero_reg__
	std Z+5,__zero_reg__
	std Z+6,__zero_reg__
	std Z+7,__zero_reg__
	ldd r24,Y+28
	ldd r25,Y+29
	movw r30,r24
	st Z,__zero_reg__
	std Z+1,__zero_reg__
	std Z+2,__zero_reg__
	std Z+3,__zero_reg__
	rjmp .L56
.L51:
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	call __subsf3
	movw r26,r24
	movw r24,r22
	std Y+21,r24
	std Y+22,r25
	std Y+23,r26
	std Y+24,r27
	ldd r24,Y+28
	ldd r25,Y+29
	movw r30,r24
	ldd r24,Z+8
	ldd r25,Z+9
	ldd r26,Z+10
	ldd r27,Z+11
	ldi r18,0
	ldi r19,0
	ldi r20,0
	ldi r21,lo8(63)
	movw r22,r24
	movw r24,r26
	call __gtsf2
	cp __zero_reg__,r24
	brge .L52
	ldd r18,Y+13
	ldd r19,Y+14
	ldd r20,Y+15
	ldd r21,Y+16
	ldi r22,0
	ldi r23,0
	ldi r24,0
	ldi r25,lo8(64)
	call __subsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	movw r22,r24
	movw r24,r26
	call __subsf3
	movw r26,r24
	movw r24,r22
	movw r18,r24
	movw r20,r26
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
	call __divsf3
	movw r26,r24
	movw r24,r22
	rjmp .L25
.L52:
	ldd r18,Y+17
	ldd r19,Y+18
	ldd r20,Y+19
	ldd r21,Y+20
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	call __addsf3
	movw r26,r24
	movw r24,r22
	movw r18,r24
	movw r20,r26
	ldd r22,Y+21
	ldd r23,Y+22
	ldd r24,Y+23
	ldd r25,Y+24
	call __divsf3
	movw r26,r24
	movw r24,r22
.L25:
	ldd r18,Y+28
	ldd r19,Y+29
	movw r30,r18
	std Z+4,r24
	std Z+5,r25
	std Z+6,r26
	std Z+7,r27
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	call __eqsf2
	tst r24
	brne .L53
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	call __subsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+21
	ldd r19,Y+22
	ldd r20,Y+23
	ldd r21,Y+24
	movw r22,r24
	movw r24,r26
	call __divsf3
	movw r26,r24
	movw r24,r22
	movw r12,r24
	movw r14,r26
	ldd r18,Y+9
	ldd r19,Y+10
	ldd r20,Y+11
	ldd r21,Y+12
	ldd r22,Y+5
	ldd r23,Y+6
	ldd r24,Y+7
	ldd r25,Y+8
	call __ltsf2
	tst r24
	brge .L54
	ldi r24,0
	ldi r25,0
	ldi r26,lo8(-64)
	ldi r27,lo8(64)
	rjmp .L30
.L54:
	ldi r24,0
	ldi r25,0
	movw r26,r24
.L30:
	movw r18,r24
	movw r20,r26
	movw r24,r14
	movw r22,r12
	call __addsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+28
	ldd r19,Y+29
	movw r30,r18
	st Z,r24
	std Z+1,r25
	std Z+2,r26
	std Z+3,r27
	rjmp .L31
.L53:
	ldd r18,Y+5
	ldd r19,Y+6
	ldd r20,Y+7
	ldd r21,Y+8
	ldd r22,Y+13
	ldd r23,Y+14
	ldd r24,Y+15
	ldd r25,Y+16
	call __eqsf2
	tst r24
	brne .L55
	ldd r18,Y+1
	ldd r19,Y+2
	ldd r20,Y+3
	ldd r21,Y+4
	ldd r22,Y+9
	ldd r23,Y+10
	ldd r24,Y+11
	ldd r25,Y+12
	call __subsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+21
	ldd r19,Y+22
	ldd r20,Y+23
	ldd r21,Y+24
	movw r22,r24
	movw r24,r26
	call __divsf3
	movw r26,r24
	movw r24,r22
	ldi r18,0
	ldi r19,0
	ldi r20,0
	ldi r21,lo8(64)
	movw r22,r24
	movw r24,r26
	call __addsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+28
	ldd r19,Y+29
	movw r30,r18
	st Z,r24
	std Z+1,r25
	std Z+2,r26
	std Z+3,r27
	rjmp .L31
.L55:
	ldd r18,Y+5
	ldd r19,Y+6
	ldd r20,Y+7
	ldd r21,Y+8
	ldd r22,Y+1
	ldd r23,Y+2
	ldd r24,Y+3
	ldd r25,Y+4
	call __subsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+21
	ldd r19,Y+22
	ldd r20,Y+23
	ldd r21,Y+24
	movw r22,r24
	movw r24,r26
	call __divsf3
	movw r26,r24
	movw r24,r22
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(-128)
	ldi r21,lo8(64)
	movw r22,r24
	movw r24,r26
	call __addsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+28
	ldd r19,Y+29
	movw r30,r18
	st Z,r24
	std Z+1,r25
	std Z+2,r26
	std Z+3,r27
.L31:
	ldd r24,Y+28
	ldd r25,Y+29
	movw r30,r24
	ld r24,Z
	ldd r25,Z+1
	ldd r26,Z+2
	ldd r27,Z+3
	ldi r18,0
	ldi r19,0
	ldi r20,lo8(-64)
	ldi r21,lo8(64)
	movw r22,r24
	movw r24,r26
	call __divsf3
	movw r26,r24
	movw r24,r22
	ldd r18,Y+28
	ldd r19,Y+29
	movw r30,r18
	st Z,r24
	std Z+1,r25
	std Z+2,r26
	std Z+3,r27
.L56:
	nop
/* epilogue start */
	adiw r28,29
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r15
	pop r14
	pop r13
	pop r12
	ret
	.size	RGBtoHSL, .-RGBtoHSL
.global	main
	.type	main, @function
main:
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	sbiw r28,15
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 15 */
/* stack size = 17 */
.L__stack_usage = 17
	ldi r24,lo8(-1)
	std Y+1,r24
	std Y+2,__zero_reg__
	std Y+3,__zero_reg__
	movw r18,r28
	subi r18,-4
	sbci r19,-1
	ldd r24,Y+1
	ldd r25,Y+2
	ldd r26,Y+3
	movw r20,r18
	movw r22,r24
	mov r24,r26
	call RGBtoHSL
	ldi r24,0
	ldi r25,0
/* epilogue start */
	adiw r28,15
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	ret
	.size	main, .-main
	.ident	"GCC: (GNU) 5.4.0"
