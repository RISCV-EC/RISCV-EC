	.file	"fibonacci_sec.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
.global	main
	.type	main, @function
main:
	push r2
	push r3
	push r4
	push r5
	push r6
	push r7
	push r8
	push r9
	push r10
	push r11
	push r12
	push r13
	push r14
	push r15
	push r16
	push r17
	push r28
	push r29
	in r28,__SP_L__
	in r29,__SP_H__
	subi r28,34
	sbci r29,3
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
/* prologue: function */
/* frame size = 802 */
/* stack size = 820 */
.L__stack_usage = 820
	std Y+3,__zero_reg__
	std Y+4,__zero_reg__
	std Y+5,__zero_reg__
	std Y+6,__zero_reg__
	std Y+7,__zero_reg__
	std Y+8,__zero_reg__
	std Y+9,__zero_reg__
	std Y+10,__zero_reg__
	ldi r24,lo8(1)
	std Y+11,r24
	std Y+12,__zero_reg__
	std Y+13,__zero_reg__
	std Y+14,__zero_reg__
	std Y+15,__zero_reg__
	std Y+16,__zero_reg__
	std Y+17,__zero_reg__
	std Y+18,__zero_reg__
	ldi r24,lo8(2)
	ldi r25,0
	std Y+2,r25
	std Y+1,r24
	rjmp .L2
.L3:
	ldd r24,Y+1
	ldd r25,Y+2
	sbiw r24,1
	lsl r24
	rol r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,2
	movw r30,r24
	ld r10,Z
	movw r30,r24
	ldd r11,Z+1
	movw r30,r24
	ldd r12,Z+2
	movw r30,r24
	ldd r13,Z+3
	movw r30,r24
	ldd r14,Z+4
	movw r30,r24
	ldd r15,Z+5
	movw r30,r24
	ldd r16,Z+6
	movw r30,r24
	ldd r17,Z+7
	ldd r24,Y+1
	ldd r25,Y+2
	sbiw r24,2
	lsl r24
	rol r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,2
	movw r30,r24
	ld r2,Z
	movw r30,r24
	ldd r3,Z+1
	movw r30,r24
	ldd r4,Z+2
	movw r30,r24
	ldd r5,Z+3
	movw r30,r24
	ldd r6,Z+4
	movw r30,r24
	ldd r7,Z+5
	movw r30,r24
	ldd r8,Z+6
	movw r30,r24
	ldd r9,Z+7
	mov r18,r10
	mov r19,r11
	mov r20,r12
	mov r21,r13
	mov r22,r14
	mov r23,r15
	mov r24,r16
	mov r25,r17
	mov r10,r2
	mov r11,r3
	mov r12,r4
	mov r13,r5
	mov r14,r6
	mov r15,r7
	mov r16,r8
	mov r17,r9
	call __adddi3
	mov r10,r18
	mov r11,r19
	mov r12,r20
	mov r13,r21
	mov r14,r22
	mov r15,r23
	mov r16,r24
	mov r17,r25
	ldd r24,Y+1
	ldd r25,Y+2
	lsl r24
	rol r25
	lsl r24
	rol r25
	lsl r24
	rol r25
	movw r18,r28
	subi r18,-1
	sbci r19,-1
	add r24,r18
	adc r25,r19
	adiw r24,2
	movw r30,r24
	st Z,r10
	movw r30,r24
	std Z+1,r11
	movw r30,r24
	std Z+2,r12
	movw r30,r24
	std Z+3,r13
	movw r30,r24
	std Z+4,r14
	movw r30,r24
	std Z+5,r15
	movw r30,r24
	std Z+6,r16
	movw r30,r24
	std Z+7,r17
	ldd r24,Y+1
	ldd r25,Y+2
	adiw r24,1
	std Y+2,r25
	std Y+1,r24
.L2:
	ldd r24,Y+1
	ldd r25,Y+2
	cpi r24,100
	cpc r25,__zero_reg__
	brge .+2
	rjmp .L3
	ldi r24,0
	ldi r25,0
/* epilogue start */
	subi r28,-34
	sbci r29,-4
	in __tmp_reg__,__SREG__
	cli
	out __SP_H__,r29
	out __SREG__,__tmp_reg__
	out __SP_L__,r28
	pop r29
	pop r28
	pop r17
	pop r16
	pop r15
	pop r14
	pop r13
	pop r12
	pop r11
	pop r10
	pop r9
	pop r8
	pop r7
	pop r6
	pop r5
	pop r4
	pop r3
	pop r2
	ret
	.size	main, .-main
	.ident	"GCC: (GNU) 5.4.0"
